/**
 * File:    Inigo.cga
 * Created: 10:41 AM 6/29/2020
 * Author:  Kevin Huberty
 */

 version "2020.0"

# ----------------------------------------
# Attributes
# ----------------------------------------

@Group("Display")
    @Order(1)
        @Enum("Mass", "Lot")
        @Description("Determines setup for initial geometry creation")
        attr RuleType = "Lot"
    @Order(2)
        @Enum( "Italianate", "Federal", "Second Empire", "Neo-Grec", "Gothic", "Beaux Arts", "Romanesque", "Art Deco", "Basic")
        attr Style = "Italianate"
    @Order(3)
        attr ShowFacade = true
    @Order(4)
        attr ShowFloors = false
    @Order(5)
    	attr ShowRoof = true

@Group("Floors")    
    @Order(1)
        @Distance
    	@Range(min=5, max=80, stepsize=1, restricted=false)
    	@Handle(shape=BuildingSplitFacadeShell, type=linear, reference=center, align=right, skin=singleArrow, slip=inside, occlusion=false, axis=y)
        attr overallHeight = 24
    @Order(2)
        @Distance
        @Range(min=0, max=3, restricted=false)
        #@Handle(shape=Foundation, type=linear, reference=origin, align=right, skin=sphere, slip=inside, occlusion=false, axis=y)
        attr foundationHeight = 0
    @Order(3)
        @Distance
        @Range(min=3, max=7, restricted=false)
        #@Handle(shape=GroundFloor, type=linear, reference=origin, align=right, skin=sphere, slip=inside, occlusion=false, axis=y)
        attr groundfloorHeight = 5.5
    @Order(4)
        @Distance
        @Range(min=3, max=7, restricted=false)
        #@Handle(shape=Floor, type=linear, reference=origin, align=right, skin=sphere, slip=inside, occlusion=false, axis=y-)
        attr floorHeight =	3.5
    @Order(5)
        @Distance
        @Range(min=3, max=7, restricted=false)
        #@Handle(shape=TopFloor, type=linear, reference=origin, align=right, skin=sphere, slip=inside, occlusion=false, axis=y-)
        attr topfloorHeight = 3

@Group("Bays")
    @Order(1)
        @Range(min=2, max=5, restricted=false)
        attr tileWidth = 3.1
    @Order(2)
        @Range(min=1, max=3, restricted=false)
        attr windowWidth = 1.4
    @Order(3)
        @Range(min=1,max=3, restricted=false)
        attr doorWidth = 2.1
        
	@Hidden
	attr _massType = ""
	@Hidden
	attr _floorIndex = 0
	@Hidden
	attr _floorCount = 0
	@Hidden
	attr _floorHeight = 0
	@Hidden
	attr _facadeFace = ""

# ----------------------------------------
# Constants & Imports
# ----------------------------------------

const wallInset = 0.4

# --Styles--------------------------------

import Italianate : "rules/expansions/Italianate_BETA.cga"
import Federal : "rules/expansions/Federal_BETA.cga"
#import SecondEmpire : "rules/expansions/SecondEmpire_BETA.cga"
import NeoGrec : "rules/expansions/NeoGrec_BETA.cga"
#import Gothic : "rules/expansions/Gothic_BETA.cga"
#import BeauxArts : "rules/expansions/BeauxArts_BETA.cga"
#import Romanesque : "rules/expansions/Romanesque_BETA.cga"
#import ArtDeco : "rules/expansions/ArtDeco_BETA.cga"
import Basic : "rules/expansions/Basic_BETA.cga"

import Roof: "rules/expansions/Roofs_BETA.cga"


# ----------------------------------------
# Start Rule
# ----------------------------------------

@StartRule
Determiner -->
    [case RuleType=="Mass": Mass else: NIL]
	[case RuleType=="Lot": Lot else: NIL]

# ----------------------------------------
# Geometry Setup
# ----------------------------------------

@InMesh
Mass -->
    alignScopeToAxes(y)
	cleanupGeometry(edges, 0.5)
    comp(f) {top:RoofBeforeSplit}

    [case ShowFacade: BuildingSplitFacadeShell else: NIL]
    [case ShowFloors: BuildingSplitFloors else: NIL]

Lot -->
    extrude(world.up, overallHeight)
    comp(f) {top:RoofBeforeSplit}

    [case ShowFacade: BuildingSplitFacadeShell else: NIL]
    [case ShowFloors: BuildingSplitFloors else: NIL]

BuildingSplitFacadeShell -->
    comp(f) {bottom:NIL | all = BuildingSplit("Shell")}

BuildingSplitFloors -->
    BuildingSplit("Floors")

# ----------------------------------------
# Floor Creation
# ----------------------------------------


BuildingSplit(type) -->
    alignScopeToAxes(y)

    split(y){foundationHeight    : 
    			#Foundation
                set(_massType, "Foundation")
                set(_floorHeight, foundationHeight)
                [case type == "Shell": FloorShell else: FloorMass]
                NIL
            |groundfloorHeight   : 
            	#GroundFloor
                set(_massType, "Ground")
                set(_floorHeight, groundfloorHeight)
                [case type == "Shell": FloorShell else: FloorMass]
                NIL
            |{~floorHeight       : 
            	#Floor
                set(_massType, "Middle")
                set(_floorHeight, floorHeight)
                [case type == "Shell": FloorShell else: FloorMass]
                NIL}*
            |topfloorHeight      : 
            	#TopFloor
                set(_massType, "Top")
                set(_floorHeight, topfloorHeight)
                [case type == "Shell": FloorShell else: FloorMass]
                NIL
            |1                 : TopLedge}

FloorShell -->
    set(_floorIndex, split.index)
    set(_floorCount, split.total)
    comp(f) {bottom: color("#300000") | top: NIL | all: ImportFacade}

ImportFacade -->
    [case Style == "Italianate": Italianate.Facade(_massType, _floorIndex, _floorCount, _floorHeight, tileWidth, windowWidth, doorWidth) else:NIL]
    [case Style == "Basic": Basic.Facade(_massType, _floorIndex, _floorCount, _floorHeight, tileWidth, windowWidth, doorWidth) else:NIL]
    [case Style == "Federal": Federal.Facade(_massType, _floorIndex, _floorCount, _floorHeight, tileWidth, windowWidth, doorWidth, _facadeFace) else:NIL]
	[case Style == "Neo-Grec": NeoGrec.Facade(_massType, _floorIndex, _floorCount, _floorHeight, tileWidth, windowWidth, doorWidth) else:NIL]
RoofBeforeSplit -->
	[case ShowRoof: Roof.RoofStart
	 else: NIL]
	

FloorMass -->
    set(_floorIndex, split.index)
    set(_floorCount, split.total)
    comp(f) {top: Ceiling | bottom: Base | all: NIL}
    
Base -->
	offset(-.01, inside)
	extrude(-0.15)

Ceiling -->
	offset(-.01, inside)
	extrude(-.25)

